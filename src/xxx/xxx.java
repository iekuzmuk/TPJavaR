/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package xxx;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.DatabaseMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class xxx extends javax.swing.JFrame {

    /**
     * @return the searchFieldName
     */
    public String getSearchFieldName() {
        return searchFieldName;
    }

    /**
     * @param searchFieldName the searchFieldName to set
     */
    public void setSearchFieldName(String searchFieldName) {
        this.searchFieldName = searchFieldName;
    }

    /**
     * Creates new form Vista
     */
    public xxx() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        setDbName("estudiantes");
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableBase = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldBuscaXNombre = new javax.swing.JTextField();
        jButtonBuscarXNombre = new javax.swing.JButton();
        jButtonConnectDatabase = new javax.swing.JButton();
        jButtonSelectTable = new javax.swing.JButton();
        
        String[] petStrings = { "Bird", "Cat", "Dog", "Rabbit", "Pig" };
        dbComboBoxList = new JComboBox(petStrings);
        dbComboBoxList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboSelectedDatabaseActionPerformed(evt);
            }
        });
        dbComboBoxList.setVisible(false);
        tblComboBoxList = new JComboBox(petStrings);
        tblComboBoxList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboSelectedTableActionPerformed(evt);
            }
        });
        tblComboBoxList.setVisible(false);
        
        
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTableBase.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] { 
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableBase.getTableHeader().addMouseListener( new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
            int col = jTableBase.columnAtPoint(e.getPoint());
            setSearchFieldName(jTableBase.getColumnName(col));
            jButtonBuscarXNombre.setText("Buscar en: "+getSearchFieldName());
          
       /* if (e.getButton() == MouseEvent.NOBUTTON) {
          jButtonBuscarXNombre.setText("No button clicked...");
        } else if (e.getButton() == MouseEvent.BUTTON1) {
           jButtonBuscarXNombre.setText("Button 1 clicked...");
        } else if (e.getButton() == MouseEvent.BUTTON2) {
           jButtonBuscarXNombre.setText("Button 2 clicked...");
        } else if (e.getButton() == MouseEvent.BUTTON3) {
           jButtonBuscarXNombre.setText("Button 3 clicked...");
        }
        System.out.println("Number of click: " + e.getClickCount());
        System.out.println("Click position (X, Y):  " + e.getX() + ", " + e.getY());*/
      }
    }
       
        
        );
        
        jScrollPane1.setViewportView(jTableBase);

        jLabel1.setText("Buscar x nombre");

        jButtonBuscarXNombre.setText("Buscar");
        jButtonBuscarXNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarXNombreActionPerformed(evt);
            }
        });

        jButtonConnectDatabase.setText("Connectar con mySql");
        jButtonConnectDatabase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConnectDatabaseActionPerformed(evt);
            }
        });
        jButtonSelectTable.setText("Seleccionar Tabla");
        jButtonSelectTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelectTableActionPerformed(evt);
            }
        });
        jButtonSelectTable.setVisible(false);
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextFieldBuscaXNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonBuscarXNombre))
                    
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dbComboBoxList, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonConnectDatabase))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tblComboBoxList, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonSelectTable))
                        
                        .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 631, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldBuscaXNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBuscarXNombre))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dbComboBoxList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonConnectDatabase))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tblComboBoxList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSelectTable))    
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboSelectedDatabaseActionPerformed(java.awt.event.ActionEvent evt) {
        try{
            System.out.println("hola: "+ getDbName()); 
            setDbName(dbComboBoxList.getSelectedItem().toString());
            populateTblComboBox();
        }catch (Exception ex){
            System.out.println(ex);
        }     
    }
    
    private void populateTblComboBox(){
        ResultSet rs;
        try{
            DatabaseMetaData dbmd =  this.conectar().getMetaData();
            rs = dbmd.getTables(getDbName(), null, null, new String[]{"TABLE","VIEW"});
            int countMax = resultSetCount(rs);
            System.out.println("countMax: "+countMax);
            rs.relative(-countMax-1);
            tblComboBoxList.removeAllItems();    
            for(int count=0; count <countMax; count++){
                rs.next();
                System.out.println("("+count+") "+ rs.getString("TABLE_NAME"));
                tblComboBoxList.addItem(makeObj(rs.getString("TABLE_NAME")));
            } 
        }catch (SQLException e) {
            e.printStackTrace();
        }finally{
           // close(rs,null,null);
	}
        tblComboBoxList.setVisible(true);
      //  jButtonSelectTable.setVisible(true);
    }
    private void updateTblContent(){
        String[] campos = new String[6];
        modelo = new DefaultTableModel(null,campos);
        try {
            String[] registros = new String[6];
            Statement stmt = this.conectar().createStatement();
            String queryStr = "SELECT * FROM " + getTblName() + ";";
            ResultSet consulta = stmt.executeQuery(queryStr);
            int count = 0;
            int numberOfColumns = 0;
            ResultSetMetaData metadata = consulta.getMetaData();
            numberOfColumns = metadata.getColumnCount();
            System.out.println("hola: "+queryStr+ numberOfColumns);
            while (consulta.next()) {
                for(count=0; count <numberOfColumns ; count++)
                    registros[count] = consulta.getString(count+1);
                modelo.addRow(registros);
            }
            
            for(count=0; count<numberOfColumns ; count++)
                campos [count] = metadata.getColumnLabel(count+1);
            modelo.setColumnIdentifiers(campos);
        } catch (SQLException ex) {
            System.out.println(ex);
        }
        jTableBase.setModel(modelo);
    }
    
    private void jComboSelectedTableActionPerformed(java.awt.event.ActionEvent evt) {
        try{
            setTblName(tblComboBoxList.getSelectedItem().toString());
            System.out.println("combo box table (action performed): "+ getTblName());   
            updateTblContent();
        }catch (Exception ex){
            System.out.println(ex);
        }
         
    }
    
    private void jButtonSelectTableActionPerformed(java.awt.event.ActionEvent evt) {
      try{
            DatabaseMetaData dbmd =  this.conectar().getMetaData();
            ResultSet ctlgs = dbmd.getCatalogs();
            int countMax = resultSetCount(ctlgs);
            String[] DBNames = new String[countMax];
            System.out.println("countMax: "+countMax);
           
           // while (ctlgs.next())System.out.println("ctlgs="+ctlgs.getString(1));
            ctlgs.relative(-countMax-1);
          //  while (ctlgs.next())System.out.println("ctlgs="+ctlgs.getString(1));
           
          dbComboBoxList.removeAllItems();    
          for(int count=0; count <countMax; count++){
               ctlgs.next();
                System.out.println("("+count+") "+ ctlgs.getString(1));
              dbComboBoxList.addItem(makeObj(ctlgs.getString(1)));
               // DBNames[count] = ;
            }
            //dbComboBoxList = new JComboBox(DBNames);
             
            dbComboBoxList.setVisible(true);
        }catch (SQLException ex){
            System.out.println(ex);
        }
    }
    private void jButtonConnectDatabaseActionPerformed(java.awt.event.ActionEvent evt) {
      try{
            DatabaseMetaData dbmd =  this.conectar().getMetaData();
            ResultSet ctlgs = dbmd.getCatalogs();
            int countMax = resultSetCount(ctlgs);
            String[] DBNames = new String[countMax];
            System.out.println("countMax: "+countMax);
           
           // while (ctlgs.next())System.out.println("ctlgs="+ctlgs.getString(1));
            ctlgs.relative(-countMax-1);
          //  while (ctlgs.next())System.out.println("ctlgs="+ctlgs.getString(1));
           
          dbComboBoxList.removeAllItems();    
          for(int count=0; count <countMax; count++){
               ctlgs.next();
                System.out.println("("+count+") "+ ctlgs.getString(1));
              dbComboBoxList.addItem(makeObj(ctlgs.getString(1)));
               // DBNames[count] = ;
            }
            //dbComboBoxList = new JComboBox(DBNames);
             
            dbComboBoxList.setVisible(true);
        }catch (SQLException ex){
            System.out.println(ex);
        }
    }
   
    private Object makeObj(final String item)  {
        return new Object() { public String toString() { return item; } };
    }
    private void jButtonBuscarXNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarXNombreActionPerformed
        
        String[] campos = new String[6];
        modelo = new DefaultTableModel(null,campos);
        try {
            String[] registros = new String[6];
            Statement stmt = this.conectar().createStatement();
            String queryStr = "SELECT * FROM "+ getTblName() + " where "+getSearchFieldName() +" like '%" + jTextFieldBuscaXNombre.getText() + "%';";
            ResultSet consulta = stmt.executeQuery(queryStr);
            int count = 0;
            int numberOfColumns = 0;
            ResultSetMetaData metadata = consulta.getMetaData();
            numberOfColumns = metadata.getColumnCount();
            System.out.println("hola: "+queryStr+ numberOfColumns);
            while (consulta.next()) {
                for(count=0; count <numberOfColumns ; count++)
                    registros[count] = consulta.getString(count+1);
                modelo.addRow(registros);
            }
            
            for(count=0; count<numberOfColumns ; count++)
                campos [count] = metadata.getColumnLabel(count+1);
            modelo.setColumnIdentifiers(campos);
            
            
        } catch (SQLException ex) {
            System.out.println(ex);
        }
        
        jTableBase.setModel(modelo);
    }//GEN-LAST:event_jButtonBuscarXNombreActionPerformed

    private int resultSetCount(ResultSet resultSet) throws SQLException{
        try{
            int i = 0;
            while (resultSet.next()) i++;
            return i;
        } catch (Exception e){
            System.out.println("Error getting row count");
            e.printStackTrace();
        }
        return 0;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(xxx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(xxx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(xxx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(xxx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new xxx().setVisible(true);
            }
        });
    }

    private Connection conectar() {
             
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection conec = DriverManager.getConnection("jdbc:mysql://localhost/"+getDbName(),"root","");
            System.out.println("Connected");
            return conec;
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
            return null;
        }
        
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBuscarXNombre;
    private javax.swing.JButton jButtonConnectDatabase;
    private javax.swing.JButton jButtonSelectTable;
    private JComboBox dbComboBoxList;
    private JComboBox tblComboBoxList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableBase;
    private javax.swing.JTextField jTextFieldBuscaXNombre;
    private String dbName;
    private String tblName;
    private String searchFieldName;
    // End of variables declaration//GEN-END:variables
    DefaultTableModel modelo;

    /**
     * @return the dbName
     */
    public String getDbName() {
        return dbName;
    }

    /**
     * @param dbName the dbName to set
     */
    public void setDbName(String dbName) {
        this.dbName = dbName;
    }

    /**
     * @return the tblName
     */
    public String getTblName() {
        return tblName;
    }

    /**
     * @param tblName the tblName to set
     */
    public void setTblName(String tblName) {
        this.tblName = tblName;
    }
}
